package ru.fit.app.features.main.uiimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.PaddingValuesimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.foundation.lazy.itemsimport androidx.compose.foundation.lazy.rememberLazyListStateimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.Personimport androidx.compose.material3.Cardimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.unit.dpimport ru.fit.app.design.component.ui.AppBarimport ru.fit.app.shared.training.domain.entity.Training@Composablefun Content(	modifier: Modifier = Modifier,	trainings: List<Training>,	onWorkoutSelected: (Int) -> Unit,	onProfileSelected: () -> Unit,) {	val lazyListState = rememberLazyListState()	AppBar(		title = "Main",		leftIcon = Icons.Default.Person,		onLeftButtonClick = onProfileSelected,	)	LazyColumn(		modifier = modifier,		state = lazyListState,		contentPadding = PaddingValues(16.dp),		verticalArrangement = Arrangement.spacedBy(8.dp)	) {		items(trainings) { training ->			WorkoutCard(				training = training,				onClick = onWorkoutSelected,			)		}	}}@Composablefun WorkoutCard(	training: Training,	onClick: (Int) -> Unit,) {	Card(		modifier = Modifier			.fillMaxWidth()			.clickable { onClick(training.id) },	) {		Row(			modifier = Modifier				.padding(16.dp)				.fillMaxWidth(),			verticalAlignment = Alignment.CenterVertically		) {			Text(				text = training.name,			)		}	}}