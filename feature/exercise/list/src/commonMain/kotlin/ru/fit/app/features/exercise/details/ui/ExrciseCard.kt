package ru.fit.app.features.exercise.details.uiimport androidx.compose.foundation.borderimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.DirectionsRunimport androidx.compose.material.icons.filled.FitnessCenterimport androidx.compose.material.icons.filled.SelfImprovementimport androidx.compose.material3.Cardimport androidx.compose.material3.CardDefaultsimport androidx.compose.material3.Iconimport androidx.compose.material3.MaterialThemeimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport ru.fit.app.shared.exercise.domain.entity.Exercise@Composablefun ExerciseCard(	exercise: Exercise,	onClick: () -> Unit,	modifier: Modifier = Modifier) {	Card(		modifier = modifier			.fillMaxWidth()			.padding(vertical = 8.dp, horizontal = 16.dp)			.border(				width = 1.dp,				color = MaterialTheme.colorScheme.outline,				shape = MaterialTheme.shapes.medium			)			.clickable { onClick() },		elevation = CardDefaults.cardElevation(defaultElevation = 2.dp),		colors = CardDefaults.cardColors(			containerColor = MaterialTheme.colorScheme.surface,			contentColor = MaterialTheme.colorScheme.onSurface		),		shape = MaterialTheme.shapes.medium	) {		Row(			modifier = Modifier				.fillMaxWidth()				.padding(16.dp),			verticalAlignment = Alignment.CenterVertically,			horizontalArrangement = Arrangement.spacedBy(16.dp)		) {			Icon(				imageVector = when (exercise.type) {					Exercise.ExerciseType.STRENGTH, Exercise.ExerciseType.COMPOUND, Exercise.ExerciseType.ISOLATION -> Icons.Default.FitnessCenter					Exercise.ExerciseType.CARDIO, Exercise.ExerciseType.FUNCTIONAL                                  -> Icons.Default.DirectionsRun					Exercise.ExerciseType.FLEXIBILITY                                                               -> Icons.Default.SelfImprovement				},				contentDescription = null,				modifier = Modifier.size(54.dp),				tint = MaterialTheme.colorScheme.primary			)			Column(				modifier = Modifier.weight(1f),				verticalArrangement = Arrangement.spacedBy(4.dp)			) {				Row(					horizontalArrangement = Arrangement.spacedBy(8.dp),					verticalAlignment = Alignment.CenterVertically				) {					Text(						text = exercise.name,						style = MaterialTheme.typography.titleMedium,						fontSize = 18.sp,						color = MaterialTheme.colorScheme.onSurface					)					exercise.difficulty?.let {						Text(							text = it.name.lowercase().replaceFirstChar { char -> char.uppercase() },							style = MaterialTheme.typography.labelSmall,							fontSize = 12.sp,							color = MaterialTheme.colorScheme.primary						)					}				}				Row(					horizontalArrangement = Arrangement.spacedBy(8.dp)				) {					Text(						text = exercise.type.name.lowercase().replaceFirstChar { it.uppercase() },						style = MaterialTheme.typography.bodyMedium,						fontSize = 14.sp,						color = MaterialTheme.colorScheme.onSurfaceVariant					)					exercise.targetMuscles?.takeIf { it.isNotEmpty() }?.let {						Text(							text = it.joinToString(", "),							style = MaterialTheme.typography.bodyMedium,							fontSize = 14.sp,							color = MaterialTheme.colorScheme.onSurfaceVariant						)					}				}				exercise.equipment?.let {					Text(						text = "Equipment: ${it.name.lowercase().replaceFirstChar { char -> char.uppercase() }}",						style = MaterialTheme.typography.bodySmall,						fontSize = 12.sp,						color = MaterialTheme.colorScheme.onSurfaceVariant					)				}			}		}	}}@Composablefun ExerciseCardPreview() {	ExerciseCard(		exercise = Exercise(			id = 1,			name = "Bench Press",			type = Exercise.ExerciseType.STRENGTH,			targetMuscles = listOf("Chest", "Triceps", "Shoulders"),			equipment = Exercise.EquipmentType.BARBELL,			difficulty = Exercise.DifficultyLevel.INTERMEDIATE		),		onClick = {},		modifier = Modifier.padding(16.dp)	)}