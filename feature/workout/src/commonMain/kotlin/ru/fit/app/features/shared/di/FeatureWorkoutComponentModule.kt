package ru.fit.app.features.shared.diimport com.arkivanov.decompose.ComponentContextimport org.koin.core.parameter.parametersOfimport org.koin.dsl.moduleimport ru.fit.app.features.details.presentation.DetailsComponentimport ru.fit.app.features.selection.presentation.SelectionComponentimport ru.fit.app.features.shared.presentation.FeatureWorkoutComponentimport ru.fit.app.features.workout.presentation.WorkoutComponentval FeatureWorkoutComponentModule = module {	factory { (componentContext: ComponentContext, id: Int) ->		FeatureWorkoutComponent(			componentContext = componentContext,			workoutComponentFactory = { context, onSelected, onDetails ->				get<WorkoutComponent>(parameters = {					parametersOf(context, id, onSelected, onDetails)				})			},			detailsComponentFactory = { context ->				get<DetailsComponent>(parameters = {					parametersOf(context, id)				})			},			selectionComponentFactory = { context ->				get<SelectionComponent>(parameters = {					parametersOf(context)				})			},			idWorkout = id		)	}}