package ru.fit.app.features.workout.diimport com.arkivanov.decompose.ComponentContextimport org.koin.dsl.moduleimport ru.fit.app.features.workout.data.converter.ConverterWorkoutimport ru.fit.app.features.workout.data.network.WorkoutApiimport ru.fit.app.features.workout.data.repository.WorkoutRepositoryImplimport ru.fit.app.features.workout.domain.repository.WorkoutRepositoryimport ru.fit.app.features.workout.domain.usecase.GetWorkoutUseCaseimport ru.fit.app.features.workout.presentation.WorkoutComponentval WorkoutModule = module {	factory { WorkoutApi() }	factory { ConverterWorkout() }	factory<WorkoutRepository> { WorkoutRepositoryImpl(get(), get()) }	factory { GetWorkoutUseCase(get()) }	factory { (componentContext: ComponentContext, id: Int) ->		WorkoutComponent(			componentContext = componentContext,			getWorkoutUseCase = get(),			id = id		)	}}