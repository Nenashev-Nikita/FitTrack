package ru.fit.app.features.workout.diimport com.arkivanov.decompose.ComponentContextimport org.koin.core.module.dsl.factoryOfimport org.koin.dsl.moduleimport ru.fit.app.features.workout.data.converter.ConverterWorkoutimport ru.fit.app.features.workout.data.network.WorkoutApiimport ru.fit.app.features.workout.data.repository.WorkoutRepositoryImplimport ru.fit.app.features.workout.domain.usecase.GetWorkoutUseCaseimport ru.fit.app.features.workout.presentation.WorkoutComponentval WorkoutModule = module {	factoryOf(::WorkoutApi)	factoryOf(::ConverterWorkout)	factoryOf(::WorkoutRepositoryImpl)	factoryOf(::GetWorkoutUseCase)	factory { (				  componentContext: ComponentContext,				  id: Int,				  onSelected: () -> Unit,				  onDetails: () -> Unit			  ) ->		WorkoutComponent(			componentContext = componentContext,			getWorkoutUseCase = get(),			id = id,			onDetailsSelected = onDetails,			onSelectedSelected = onSelected,		)	}}