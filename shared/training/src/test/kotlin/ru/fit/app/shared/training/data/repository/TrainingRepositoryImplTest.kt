package ru.fit.app.shared.training.data.repositoryimport kotlinx.coroutines.test.runTestimport kotlinx.datetime.Instantimport org.junit.jupiter.api.Testimport org.mockito.Mockito.mockimport org.mockito.kotlin.wheneverimport ru.fit.app.shared.training.data.converter.ConverterTrainingimport ru.fit.app.shared.training.data.module.TrainingModuleimport ru.fit.app.shared.training.data.network.TrainingApiimport ru.fit.app.shared.training.domain.entity.Trainingimport ru.fit.app.shared.training.domain.repository.TrainingRepositoryimport kotlin.test.assertEqualsclass TrainingRepositoryImplTest {	private val trainingApi: TrainingApi = mock()	private val converterTraining: ConverterTraining = mock()	private val repository: TrainingRepository = TrainingRepositoryImpl(trainingApi, converterTraining)	@Test	fun `test getAll returns converted trainings`() = runTest {		val trainingModules = listOf(			TrainingModule(1, "Training 1", Instant.DISTANT_PAST, emptyList()),			TrainingModule(2, "Training 2", Instant.DISTANT_PAST, emptyList()),		)		val convertedTrainings = listOf(			Training(1, "Training 1", Instant.DISTANT_PAST, emptyList()),			Training(2, "Training 2", Instant.DISTANT_PAST, emptyList())		)		whenever(trainingApi.getAll()).thenReturn(trainingModules)		whenever(converterTraining(trainingModules)).thenReturn(convertedTrainings)		val result = repository.getAll()		assertEquals(convertedTrainings, result)	}}